 {
     "data_reader": {
         "dataset": "squad",
         "train_file_path": "https://rajpurkar.github.io/SQuAD-explorer/dataset/train-v1.1.json",
         "valid_file_path": "https://rajpurkar.github.io/SQuAD-explorer/dataset/dev-v1.1.json"
     },
     "iterator": {
         "batch_size": 32
     },
     "token": {
         "names": ["char", "glove"],
         "types": ["char", "word"],
         "tokenizer": {
             "char": {
                 "name": "character"
             },
             "word": {
                 "name": "treebank_en",
                 "split_with_regex": true
             }
         },
         "char": {
             "vocab": {
                 "start_token": "<s>",
                 "end_token": "</s>",
                 "max_vocab_size": 260
             },
             "indexer": {
                 "insert_char_start": true,
                 "insert_char_end": true
             },
             "embedding": {
                 "embed_dim": 16,
                 "kernel_sizes": [5],
                 "num_filter": 100,
                 "activation": "relu",
                 "dropout": 0.2
             }
         },
         "glove": {
             "vocab": {
                 "pretrained_path": "<glove.6B.vocab.txt path>",
                 "pretrained_token": "intersect"
             },
             "indexer": {
                 "lowercase": true
             },
             "embedding": {
                 "embed_dim": 100,
                 "pretrained_path": "<glove.6B.100d.txt path>",
                 "trainable": false,
                 "dropout": 0.2
             }
         }
     },
     "model": {
         "name": "bidaf",
         "bidaf": {
             "model_dim": 100,
             "contextual_rnn_num_layer": 1,
             "modeling_rnn_num_layer": 2,
             "predict_rnn_num_layer": 1,
             "dropout": 0.2
         }
     },
     "trainer": {
         "log_dir": "logs/squad_bidaf",
         "num_epochs": 50,
         "early_stopping_threshold": 10,
         "metric_key": "f1",
         "verbose_step_count": 100,
         "eval_and_save_step_count": "epoch"
     },
     "optimizer": {
         "op_type": "adadelta",
         "learning_rate": 0.5,
         "exponential_moving_average": 0.999
     },
     "seed_num": 2
 }
